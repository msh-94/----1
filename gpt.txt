const itemsPerPage = 5;
  const pagesPerGroup = 10;
  let currentPage = 1;

    // localStorage에서 데이터 불러오기
  const rawData = localStorage.getItem("myData");
  const data = rawData ? JSON.parse(rawData) : [];

  const totalPages = Math.ceil(data.length / itemsPerPage);

  const tbody = document.getElementById("data-body");
  const prevBtn = document.getElementById("prev-btn");
  const nextBtn = document.getElementById("next-btn");
  const pageNumbers = document.getElementById("page-numbers");

    // ✅ 테이블에 데이터 렌더링
  function renderData(page) {
    const start = (page - 1) * itemsPerPage;
    const end = start + itemsPerPage;
    const pageData = data.slice(start, end);

    tbody.innerHTML = pageData.map(item =>
      `<tr>
         <td>${item.id}</td>
         <td>${item.title}</td>
       </tr>`
    ).join('');
  }

  // ✅ 페이지 버튼 렌더링
  function renderPagination() {
    pageNumbers.innerHTML = '';

    const currentGroup = Math.floor((currentPage - 1) / pagesPerGroup);
    const startPage = currentGroup * pagesPerGroup + 1;
    const endPage = Math.min(startPage + pagesPerGroup - 1, totalPages);
    for (let i = startPage; i <= endPage; i++) {
      const btn = document.createElement("button");
      btn.textContent = i;
      if (i === currentPage) {
        btn.style.fontWeight = "bold";
        btn.style.backgroundColor = "#ddd";
      }
      btn.addEventListener("click", () => {
        currentPage = i;
        update();
      });
      pageNumbers.appendChild(btn);
    }

    // 버튼 보이기/숨기기
    prevBtn.style.display = currentPage === 1 ? "none" : "inline-block";
    nextBtn.style.display = currentPage === totalPages ? "none" : "inline-block";
  }

  function update() {
    renderData(currentPage);
    renderPagination();
  }

    prevBtn.addEventListener("click", () => {
    if (currentPage > 1) {
      currentPage--;
      update();
    }
  });

  nextBtn.addEventListener("click", () => {
    if (currentPage < totalPages) {
      currentPage++;
      update();
    }
  });

  // 초기 렌더링
  update();